{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["SubMenu","Menu","Option","Select","Header","Layout","Content","Sider","App","state","collapsed","toggle","_this","setState","handleClick","e","console","log","current","key","react_default","a","createElement","layout","class","className","menu","theme","mode","defaultSelectedKeys","onClick","this","style","lineHeight","Item","icon","type","es_select","showSearch","width","placeholder","optionFilterProp","filterOption","input","option","props","children","toLowerCase","indexOf","value","es_button","size","ghost","marginRight","badge","count","avatar","shape","background","trigger","collapsible","defaultOpenKeys","height","borderRight","title","padding","display","breadcrumb","margin","minHeight","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85e2d76c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {Layout, Menu, Breadcrumb, Avatar, Select, Badge, Button, Icon,} from 'antd';\n\nconst {SubMenu} = Menu;\nconst Option = Select.Option;\nconst {Header, Content, Sider} = Layout;\n\nclass App extends Component {\n    state = {\n        collapsed: false,\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    handleClick = (e) => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    };\n\n    render() {\n        return (\n            <Layout class=\"yuyg-layout\">\n                <Header className=\"header\">\n                    <div className=\"logo\"/>\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={['2']}\n                        onClick={this.handleClick}\n                        style={{lineHeight: '64px'}}\n                    >\n                        <Menu.Item key=\"1\"><Icon type=\"database\"/><span>数据</span></Menu.Item>\n                        <Menu.Item key=\"2\"><Icon type=\"area-chart\"/><span>展示</span></Menu.Item>\n                        <Menu.Item key=\"3\"><Icon type=\"tool\"/><span>设计器</span></Menu.Item>\n                        <Menu.Item key=\"4\"><Icon type=\"setting\"/><span>系统设置</span></Menu.Item>\n                        <Menu.Item key=\"5\"><Icon type=\"book\"/><span>我的空间</span></Menu.Item>\n                    </Menu>\n                    <div className=\"right-toolbar\">\n                        <Select\n                            showSearch\n                            style={{width: 200}}\n                            placeholder=\"Select a module\"\n                            optionFilterProp=\"children\"\n                            filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                        >\n                            <Option value=\"bi\">bi设计器</Option>\n                            <Option value=\"ready\">数据准备</Option>\n                            <Option value=\"ci\">数据采集</Option>\n                            <Option value=\"track\">数据跟踪</Option>\n                            <Option value=\"process\">流程</Option>\n                            <Option value=\"etl\">ETL</Option>\n                            <Option value=\"favio\">我的收藏</Option>\n                            <Option value=\"permission\">权限管理</Option>\n                            <Option value=\"log\">系统日志</Option>\n                            <Option value=\"recycle\">回收站</Option>\n                        </Select>\n                        <Button className='yuyg-skin' icon=\"skin\" size={64} ghost></Button>\n                        <span className=\"user-message\" style={{marginRight: 24}}>\n                          <Badge count={1}><Avatar size={28} shape=\"square\" icon=\"user\"/></Badge>\n                        </span>\n                    </div>\n                </Header>\n                <Layout>\n                    <Sider width={200} style={{background: '#fff'}} trigger={null} collapsible\n                           collapsed={this.state.collapsed}>\n                        <Menu mode=\"inline\" defaultSelectedKeys={['1']} defaultOpenKeys={['sub1']}\n                              style={{height: '100%', borderRight: 0}}>\n                            <SubMenu key=\"sub1\" title={<span><Icon type=\"user\"/><span>图表分析</span></span>}>\n                                <Menu.Item key=\"1\">2018年财务报告</Menu.Item>\n                                <Menu.Item key=\"2\">2018年湖北省各个地区销售额</Menu.Item>\n                                <Menu.Item key=\"3\">2018年湖北省税务审核报表</Menu.Item>\n                            </SubMenu>\n                            <SubMenu key=\"sub2\" title={<span><Icon type=\"laptop\"/><span>表格分析</span></span>}>\n                                <Menu.Item key=\"5\">财务报告详情表</Menu.Item>\n                                <Menu.Item key=\"6\">各地区销售指标</Menu.Item>\n                                <Menu.Item key=\"7\">各月份商品销售价格</Menu.Item>\n                                <Menu.Item key=\"8\">员工销售业绩排名</Menu.Item>\n                            </SubMenu>\n                            <SubMenu key=\"sub3\" title={<span><Icon type=\"notification\"/><span>行业分析</span></span>}>\n                                <Menu.Item key=\"9\">各类型商品不同地区销售额度</Menu.Item>\n                                <Menu.Item key=\"10\">未来各地区销售额走势分析</Menu.Item>\n                            </SubMenu>\n                        </Menu>\n                    </Sider>\n                    <Layout style={{padding: '0 24px 24px'}}>\n                        <div style={{display: 'flex'}}>\n                            <Icon\n                                 className=\"trigger\"\n                                type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                                onClick={this.toggle}\n                            />\n                            <Breadcrumb style={{margin: '16px 0'}}>\n                                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                                <Breadcrumb.Item>List</Breadcrumb.Item>\n                                <Breadcrumb.Item>App</Breadcrumb.Item>\n                            </Breadcrumb>\n                        </div>\n                        <Content style={{\n                            background: '#fff', padding: 24, margin: 0, minHeight: 280,\n                        }}\n                        >\n                            Content\n                        </Content>\n                    </Layout>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}